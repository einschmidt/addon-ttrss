# This is a basic workflow to help you get started with Actions

name: 'Build Dev'

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ master ]
#     paths:
#       - "Caddy 2/**"
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  version:
    name: Generate version
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Set version
        id: version
        run: |
          version=$(date --utc '+%Y-%m-%d-%H-%M')
          echo "Version: ${version}"
          echo "::set-output name=version::${version}"
  build:
    name: Build dev and push to Docker
    needs: version
    runs-on: ubuntu-latest

    steps:
      - run: |
          echo Version: ${{ needs.version.outputs.version }}
      - uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: home-assistant/builder@master
        with:
          args: |
            --no-latest \
            --all \
            --target "/data/ttrss" \
            --docker-hub ${{ secrets.DOCKERHUB_USERNAME }} \
            --image ttrss-{arch} \
            --version ${{ needs.version.outputs.version }}
  # This workflow generates and updates the version
  repository:
    name: Update Dev repository
    needs: 
      - version
      - build
    runs-on: ubuntu-latest
    
    steps:
      - run: |
          echo Version: ${{ needs.version.outputs.version }}
      - uses: actions/checkout@v2
        with:
          repository: einschmidt/hassio-addons-dev
          token: ${{ secrets.MY_GITHUB_TOKEN }}
      - name: Update json
        run: |
          cd ttrss
          jq '.version |= "${{ needs.version.outputs.version }}"' config.json > tmp.$$.json && mv tmp.$$.json config.json
      - name: Push version
        run: |
          cd ttrss
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add config.json
          git commit -m "New version"
          git push
